@model Eventurely.Models.ViewModels.EventDetailViewModel

@{
    ViewData["Title"] = Model?.Event?.Title ?? "Event Details";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="container py-5">
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        <a asp-action="Index" asp-controller="Event" class="btn btn-primary">Back to Events</a>
    </div>
}
else if (Model?.Event == null)
{
    <div class="container py-5">
        <div class="alert alert-danger">Event not found.</div>
        <a asp-action="Index" asp-controller="Event" class="btn btn-primary">Back to Events</a>
    </div>
}
else
{
    <div class="event-header position-relative" style="background: linear-gradient(135deg, #007bff, #6610f2);">
        @if (!string.IsNullOrEmpty(Model.Event.ImagePath))
        {
            <div class="event-cover" style="background-image: url('/images/events/@Model.Event.ImagePath');">
                <div class="overlay"></div>
            </div>
        }
        else
        {
            <div class="event-cover default-cover" style="background: #f8f9fa;">
                <div class="overlay"></div>
            </div>
        }

        <div class="container position-relative py-5">
            <div class="row">
                <div class="col-lg-8">
                    <span class="badge bg-primary mb-2" data-aos="fade-right">Upcoming Event</span>
                    <h1 class="text-white display-4 fw-bold mb-3" data-aos="fade-right" data-aos-delay="100">
                        @Model.Event.Title
                    </h1>
                    <div class="d-flex flex-wrap text-white mb-4" data-aos="fade-right" data-aos-delay="200">
                        <div class="me-4 mb-2">
                            <i class="bi bi-calendar-event me-2"></i>
                            @Model.Event.Date.ToString("dddd, MMMM dd, yyyy")
                        </div>
                        <div class="me-4 mb-2">
                            <i class="bi bi-clock me-2"></i>
                            @Model.Event.Date.ToString("h:mm tt")
                        </div>
                        <div class="mb-2">
                            <i class="bi bi-geo-alt me-2"></i>
                            @Model.Event.Venue
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 text-lg-end mt-4 mt-lg-0" data-aos="fade-left">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success mb-3">@TempData["SuccessMessage"]</div>
                    }
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        if (Model.IsRegistered)
                        {
                            <div class="alert alert-success mb-3">
                                <i class="bi bi-check-circle me-2"></i> You are registered for this event
                            </div>
                            <div class="d-flex justify-content-lg-end gap-2">
                                <a href="@Url.Action("ViewBadge", "Event", new { id = Model.RegistrationId })" class="btn btn-primary">
                                    <i class="bi bi-badge-ar me-1"></i> View Badge
                                </a>
                                <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#cancelModal">
                                    <i class="bi bi-x-lg me-1"></i> Cancel Registration
                                </button>
                            </div>
                        }
                        else
                        {
                            <button type="button" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#registerModal">
                                <i class="bi bi-calendar-plus me-1"></i> Register Now
                            </button>
                        }
                    }
                    else
                    {
                        <a href="@Url.Action("Login", "Account", new { returnUrl = Context.Request.Path })" class="btn btn-outline-light btn-lg">
                            <i class="bi bi-box-arrow-in-right me-1"></i> Login to Register
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="container py-5">
        <div class="row">
            <div class="col-lg-8" data-aos="fade-up">
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-body p-4">
                        <h2 class="card-title mb-4">About This Event</h2>
                        <div class="event-description">
                            @Html.Raw(Model.Event.Description ?? "No description available.")
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4" data-aos="fade-up" data-aos-delay="200">
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-body p-4">
                        <h4 class="card-title mb-3">Event Details</h4>
                        <ul class="list-unstyled">
                            <li class="mb-3">
                                <div class="d-flex">
                                    <span class="icon-circle bg-primary text-white me-3">
                                        <i class="bi bi-calendar"></i>
                                    </span>
                                    <div>
                                        <h6 class="mb-0">Date</h6>
                                        @Model.Event.Date.ToString("MMMM dd, yyyy")
                                    </div>
                                </div>
                            </li>
                            <li class="mb-3">
                                <div class="d-flex">
                                    <span class="icon-circle bg-primary text-white me-3">
                                        <i class="bi bi-clock"></i>
                                    </span>
                                    <div>
                                        <h6 class="mb-0">Time</h6>
                                        @Model.Event.Date.ToString("h:mm tt")
                                    </div>
                                </div>
                            </li>
                            <li class="mb-3">
                                <div class="d-flex">
                                    <span class="icon-circle bg-primary text-white me-3">
                                        <i class="bi bi-geo-alt"></i>
                                    </span>
                                    <div>
                                        <h6 class="mb-0">Venue</h6>
                                        <p class="text-muted mb-0">@Model.Event.Venue</p>
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="d-flex">
                                    <span class="icon-circle bg-primary text-white me-3">
                                        <i class="bi bi-people"></i>
                                    </span>
                                    <div>
                                        <h6 class="mb-0">Registrations</h6>
                                        <p class="text-muted mb-0">@Model.RegistrationsCount people registered</p>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="card border-0 shadow-sm">
                    <div class="card-body p-4">
                        <h4 class="card-title mb-3">Share This Event</h4>
                        <div class="d-flex gap-2 flex-wrap">
                            <button class="btn btn-outline-primary" onclick="shareEvent('facebook')" aria-label="Share on Facebook">
                                <i class="bi bi-facebook"></i>
                            </button>
                            <button class="btn btn-outline-info" onclick="shareEvent('twitter')" aria-label="Share on Twitter">
                                <i class="bi bi-twitter"></i>
                            </button>
                            <button class="btn btn-outline-success" onclick="shareEvent('whatsapp')" aria-label="Share on WhatsApp">
                                <i class="bi bi-whatsapp"></i>
                            </button>
                            <button class="btn btn-outline-secondary" onclick="shareEvent('email')" aria-label="Share via Email">
                                <i class="bi bi-envelope"></i>
                            </button>
                            <button class="btn btn-outline-dark copy-link" aria-label="Copy Link">
                                <i class="bi bi-link-45deg"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="registerModal" tabindex="-1" aria-labelledby="registerModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="registerModalLabel">Register for @Model.Event.Title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="Register" asp-controller="Event" method="post">
                    <input type="hidden" name="EventId" value="@Model.Event.Id" />
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <div class="alert alert-info">
                            <i class="bi bi-info-circle me-2"></i>
                            You'll receive a temporary badge upon successful registration.
                        </div>
                        <div class="mb-3">
                            <label for="notes" class="form-label">Special Requests (Optional)</label>
                            <textarea class="form-control" id="notes" name="Notes" rows="3" placeholder="E.g., food preferences, accessibility needs"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-calendar-check me-1"></i> Confirm Registration
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelModalLabel">Cancel Registration</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-action="CancelRegistration" asp-controller="Event" method="post">
                    <input type="hidden" name="registrationId" value="@Model.RegistrationId" />
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <p>Are you sure you want to cancel your registration for @Model.Event.Title?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Keep Registration</button>
                        <button type="submit" class="btn btn-danger">
                            <i class="bi bi-x-circle me-1"></i> Cancel Registration
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
    <script>
        AOS.init({
            duration: 800,
            once: true
        });

        function shareEvent(platform) {
            const eventUrl = window.location.href;
            const eventTitle = '@Model.Event.Title'.replace(/'/g, "\\'");
            let shareUrl = '';
            switch (platform) {
                case 'facebook':
                    shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(eventUrl)}`;
                    break;
                case 'twitter':
                    shareUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent('Check out this event: ' + eventTitle)}&url=${encodeURIComponent(eventUrl)}`;
                    break;
                case 'whatsapp':
                    shareUrl = `https://wa.me/?text=${encodeURIComponent('Check out this event: ' + eventTitle + ' ' + eventUrl)}`;
                    break;
                case 'email':
                    shareUrl = `mailto:?subject=${encodeURIComponent('Check out this event: ' + eventTitle)}&body=${encodeURIComponent('I thought you might be interested in this event: ' + eventUrl)}`;
                    break;
            }
            if (shareUrl) window.open(shareUrl, '_blank', 'width=600,height=400');
        }

        $(document).ready(function () {
            $('.copy-link').click(function () {
                navigator.clipboard.writeText(window.location.href).then(() => {
                    const originalText = $(this).html();
                    $(this).html('<i class="bi bi-check-lg"></i> Copied!');
                    setTimeout(() => $(this).html(originalText), 2000);
                });
            });
        });
    </script>
}